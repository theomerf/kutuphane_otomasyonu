[
  {
    "ContainingType": "Presentation.Controllers.AccountController",
    "Method": "GetAccount",
    "RelativePath": "api/account/{userName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AccountController",
    "Method": "GetAllAccountsCount",
    "RelativePath": "api/account/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AccountController",
    "Method": "Login",
    "RelativePath": "api/account/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountDto",
        "Type": "Entities.Dtos.AccountDtoForLogin",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AccountController",
    "Method": "Refresh",
    "RelativePath": "api/account/refresh",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tokenDto",
        "Type": "Entities.Dtos.TokenDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AccountController",
    "Method": "Register",
    "RelativePath": "api/account/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountDto",
        "Type": "Entities.Dtos.AccountDtoForRegistration",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "GetAllAccounts",
    "RelativePath": "api/admin/accounts",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "GetAccountById",
    "RelativePath": "api/admin/accounts/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "CreateAccount",
    "RelativePath": "api/admin/accounts/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountDto",
        "Type": "Entities.Dtos.AccountDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "DeleteAccount",
    "RelativePath": "api/admin/accounts/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "ResetPassword",
    "RelativePath": "api/admin/accounts/reset-password",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountDto",
        "Type": "Entities.Dtos.AccountDtoForPassword",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "GetAllRoles",
    "RelativePath": "api/admin/accounts/roles",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AccountAdminController",
    "Method": "UpdateAccount",
    "RelativePath": "api/admin/accounts/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountDto",
        "Type": "Entities.Dtos.AccountDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AuthorsAdminController",
    "Method": "CreateAuthor",
    "RelativePath": "api/admin/authors/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "authorDto",
        "Type": "Entities.Dtos.AuthorDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AuthorsAdminController",
    "Method": "DeleteAuthor",
    "RelativePath": "api/admin/authors/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.AuthorsAdminController",
    "Method": "UpdateAuthor",
    "RelativePath": "api/admin/authors/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "authorDto",
        "Type": "Entities.Dtos.AuthorDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.BooksAdminController",
    "Method": "CreateBook",
    "RelativePath": "api/admin/books/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ISBN",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AvailableCopies",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "TotalCopies",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Location",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PublishedDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "Summary",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AuthorIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TagIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "NewImages",
        "Type": "System.Collections.Generic.ICollection\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "IsImagesUrl",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "NewImagesUrl",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.BooksAdminController",
    "Method": "DeleteBook",
    "RelativePath": "api/admin/books/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.BooksAdminController",
    "Method": "UpdateBook",
    "RelativePath": "api/admin/books/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Title",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "ISBN",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AvailableCopies",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "TotalCopies",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "Location",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PublishedDate",
        "Type": "System.DateTime",
        "IsRequired": false
      },
      {
        "Name": "Summary",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "AuthorIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TagIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "ExistingImageIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "NewImages",
        "Type": "System.Collections.Generic.List\u00601[[Microsoft.AspNetCore.Http.IFormFile, Microsoft.AspNetCore.Http.Features, Version=8.0.0.0, Culture=neutral, PublicKeyToken=adb9793829ddae60]]",
        "IsRequired": false
      },
      {
        "Name": "IsImagesUrl",
        "Type": "System.Boolean",
        "IsRequired": false
      },
      {
        "Name": "NewImagesUrl",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.CategoriesAdminController",
    "Method": "CreateCategory",
    "RelativePath": "api/admin/categories/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDto",
        "Type": "Entities.Dtos.CategoryDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.CategoriesAdminController",
    "Method": "DeleteCategory",
    "RelativePath": "api/admin/categories/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.CategoriesAdminController",
    "Method": "UpdateCategory",
    "RelativePath": "api/admin/categories/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "categoryDto",
        "Type": "Entities.Dtos.CategoryDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.DashboardController",
    "Method": "GetAdminDashboard",
    "RelativePath": "api/admin/dashboard",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "GetAllLoans",
    "RelativePath": "api/admin/loan",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "GetOneLoanById",
    "RelativePath": "api/admin/loan/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "CancelLoan",
    "RelativePath": "api/admin/loan/cancel/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "GetAllLoansCount",
    "RelativePath": "api/admin/loan/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "DeleteLoan",
    "RelativePath": "api/admin/loan/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.LoanAdminController",
    "Method": "ReturnLoan",
    "RelativePath": "api/admin/loan/return/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.NotificationAdminController",
    "Method": "GetAllNotifications",
    "RelativePath": "api/admin/notifications",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.NotificationAdminController",
    "Method": "GetOneNotificationById",
    "RelativePath": "api/admin/notifications/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.NotificationAdminController",
    "Method": "CreateNotification",
    "RelativePath": "api/admin/notifications/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationDto",
        "Type": "Entities.Dtos.NotificationDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.NotificationAdminController",
    "Method": "DeleteNotification",
    "RelativePath": "api/admin/notifications/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.NotificationAdminController",
    "Method": "UpdateNotification",
    "RelativePath": "api/admin/notifications/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "notificationDto",
        "Type": "Entities.Dtos.NotificationDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.ReservationAdminController",
    "Method": "GetAllReservations",
    "RelativePath": "api/admin/reservation",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Date",
        "Type": "System.Nullable\u00601[[System.DateOnly, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TimeSlotId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.ReservationAdminController",
    "Method": "GetReservationById",
    "RelativePath": "api/admin/reservation/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.ReservationAdminController",
    "Method": "GetActiveReservationsCount",
    "RelativePath": "api/admin/reservation/active-count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.ReservationAdminController",
    "Method": "CancelReservation",
    "RelativePath": "api/admin/reservation/cancel-reservation/{reservationId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "GetSeatById",
    "RelativePath": "api/admin/seats/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "GetAllSeatsCount",
    "RelativePath": "api/admin/seats/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "CreateSeat",
    "RelativePath": "api/admin/seats/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "seatDto",
        "Type": "Entities.Dtos.SeatDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "DeleteSeat",
    "RelativePath": "api/admin/seats/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "GetSeatStatuses",
    "RelativePath": "api/admin/seats/statuses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "GetTimeSlotById",
    "RelativePath": "api/admin/seats/timeslots/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "GetAllTimeSlotsCount",
    "RelativePath": "api/admin/seats/timeslots/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "CreateTimeSlot",
    "RelativePath": "api/admin/seats/timeslots/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "timeSlotDto",
        "Type": "Entities.Dtos.TimeSlotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "DeleteTimeSlot",
    "RelativePath": "api/admin/seats/timeslots/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "UpdateTimeSlot",
    "RelativePath": "api/admin/seats/timeslots/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "timeSlotDto",
        "Type": "Entities.Dtos.TimeSlotDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.SeatsAdminController",
    "Method": "UpdateSeat",
    "RelativePath": "api/admin/seats/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "seatDto",
        "Type": "Entities.Dtos.SeatDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.TagsAdminController",
    "Method": "CreateTag",
    "RelativePath": "api/admin/tags/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagDto",
        "Type": "Entities.Dtos.TagDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.TagsAdminController",
    "Method": "DeleteTag",
    "RelativePath": "api/admin/tags/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.Admin.TagsAdminController",
    "Method": "UpdateTag",
    "RelativePath": "api/admin/tags/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "tagDto",
        "Type": "Entities.Dtos.TagDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthorsController",
    "Method": "GetAllAuthors",
    "RelativePath": "api/authors",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthorsController",
    "Method": "GetOneAuthor",
    "RelativePath": "api/authors/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthorsController",
    "Method": "GetAllAuthorsCount",
    "RelativePath": "api/authors/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthorsController",
    "Method": "GetAllAuthorsWithoutPagination",
    "RelativePath": "api/authors/nopagination",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.AuthorsController",
    "Method": "GetMostPopularAuthors",
    "RelativePath": "api/authors/popular",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BooksController",
    "Method": "GetAllBooks",
    "RelativePath": "api/books",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "AuthorId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "IsAvailable",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "IsPopular",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TagIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BooksController",
    "Method": "GetOneBook",
    "RelativePath": "api/books/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BooksController",
    "Method": "GetAllBooksCount",
    "RelativePath": "api/books/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.BooksController",
    "Method": "GetRelatedBooks",
    "RelativePath": "api/books/related/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "AuthorId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryId",
        "Type": "System.Nullable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "IsAvailable",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "Fields",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "IsPopular",
        "Type": "System.Nullable\u00601[[System.Boolean, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "CategoryIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TagIds",
        "Type": "System.Collections.Generic.ICollection\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "GetCart",
    "RelativePath": "api/cart",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "AddLineToCart",
    "RelativePath": "api/cart/addline",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartLineDto",
        "Type": "Entities.Dtos.CartLineDtoForInsertion",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "ClearCart",
    "RelativePath": "api/cart/clear",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "DecreaseQuantity",
    "RelativePath": "api/cart/decrease/{cartLineId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartLineId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "cartDto",
        "Type": "Entities.Dtos.QuantityUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "IncreaseQuantity",
    "RelativePath": "api/cart/increase/{cartLineId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartLineId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "cartDto",
        "Type": "Entities.Dtos.QuantityUpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "MergeCarts",
    "RelativePath": "api/cart/merge",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartDto",
        "Type": "Entities.Dtos.CartDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CartController",
    "Method": "RemoveLineFromCart",
    "RelativePath": "api/cart/removeline/{cartLineId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "cartLineId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetAllCategories",
    "RelativePath": "api/categories",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetOneCategory",
    "RelativePath": "api/categories/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetAllCategoriesCount",
    "RelativePath": "api/categories/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetAllCategoriesWithoutPagination",
    "RelativePath": "api/categories/nopagination",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.CategoriesController",
    "Method": "GetMostPopularCategories",
    "RelativePath": "api/categories/popular",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.LoanController",
    "Method": "GetLoansByAccountId",
    "RelativePath": "api/loan/account/{accountId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.LoanController",
    "Method": "CreateLoan",
    "RelativePath": "api/loan/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loanDto",
        "Type": "Entities.Dtos.LoanDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.LoanController",
    "Method": "DeleteLoanForUser",
    "RelativePath": "api/loan/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.LoanController",
    "Method": "UpdateLoan",
    "RelativePath": "api/loan/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loanDto",
        "Type": "Entities.Dtos.LoanDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "GetAllNotificationsOfOneUser",
    "RelativePath": "api/notification/account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "GetNotificationsCountOfOneUser",
    "RelativePath": "api/notification/account/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "DeleteAllNotificationsOfOneUser",
    "RelativePath": "api/notification/account/delete-all",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "DeleteNotificationForUser",
    "RelativePath": "api/notification/account/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "MarkAllNotificationsAsReadOfOneUser",
    "RelativePath": "api/notification/account/mark-all-as-read",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.NotificationController",
    "Method": "MarkNotificationAsRead",
    "RelativePath": "api/notification/account/mark-as-read/{id}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "GetAllPenalties",
    "RelativePath": "api/penalty",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "GetOnePenaltyById",
    "RelativePath": "api/penalty/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "GetPenaltiesByAccountId",
    "RelativePath": "api/penalty/account/{accountId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "CreatePenalty",
    "RelativePath": "api/penalty/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "penaltyDto",
        "Type": "Entities.Dtos.PenaltyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "DeletePenalty",
    "RelativePath": "api/penalty/delete/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.PenaltyController",
    "Method": "UpdatePenalty",
    "RelativePath": "api/penalty/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "penaltyDto",
        "Type": "Entities.Dtos.PenaltyDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReservationController",
    "Method": "GetReservationsOfOneUser",
    "RelativePath": "api/reservation/account",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReservationController",
    "Method": "CancelReservationForUser",
    "RelativePath": "api/reservation/account/cancel-reservation/{reservationId}",
    "HttpMethod": "PATCH",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReservationController",
    "Method": "CreateReservation",
    "RelativePath": "api/reservation/reserve-seat",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reservationDto",
        "Type": "Entities.Dtos.ReservationDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.ReservationController",
    "Method": "GetAllReservationsStatuses",
    "RelativePath": "api/reservation/statuses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "Date",
        "Type": "System.Nullable\u00601[[System.DateOnly, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": false
      },
      {
        "Name": "TimeSlotId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SeatsController",
    "Method": "GetAllSeats",
    "RelativePath": "api/seats",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.SeatsController",
    "Method": "GetAllTimeSlots",
    "RelativePath": "api/seats/timeslots",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.TagsController",
    "Method": "GetAllTags",
    "RelativePath": "api/tags",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "SearchTerm",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "OrderBy",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "PageNumber",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "PageSize",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.TagsController",
    "Method": "GetOneTag",
    "RelativePath": "api/tags/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.TagsController",
    "Method": "GetAllTagsCount",
    "RelativePath": "api/tags/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.TagsController",
    "Method": "GetAllTagsWithoutPagination",
    "RelativePath": "api/tags/nopagination",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.TagsController",
    "Method": "GetMostPopularTags",
    "RelativePath": "api/tags/popular",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "GetAllUserReviews",
    "RelativePath": "api/userreview",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "GetOneUserReviewById",
    "RelativePath": "api/userreview/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "GetUserReviewsByAccountId",
    "RelativePath": "api/userreview/account/{accountId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "accountId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "GetUserReviewsByBookId",
    "RelativePath": "api/userreview/book/{bookId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "GetUserReviewsCountByBookId",
    "RelativePath": "api/userreview/book/{bookId}/count",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "bookId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "CreateUserReview",
    "RelativePath": "api/userreview/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userReviewDto",
        "Type": "Entities.Dtos.UserReviewDtoForCreation",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "DeleteUserReview",
    "RelativePath": "api/userreview/delete/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "Presentation.Controllers.UserReviewController",
    "Method": "UpdateUserReview",
    "RelativePath": "api/userreview/update",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userReviewDto",
        "Type": "Entities.Dtos.UserReviewDtoForUpdate",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  }
]